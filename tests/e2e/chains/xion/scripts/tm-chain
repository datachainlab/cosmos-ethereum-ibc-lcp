#!/bin/bash

set -x

# This script is a modified copy from https://github.com/cosmos/relayer/blob/14195ec4c8c19f86a3b6bbe3750f392e436a5879/scripts/two-chainz

display_usage() {
	echo "\nMissing $1 parameter. Please check if all parameters were specified."
	echo "\nUsage: ./one-chain [BINARY] [CHAIN_ID] [CHAIN_DIR] [RPC_PORT] [P2P_PORT] [PROFILING_PORT] [GRPC_PORT]"
  echo "\nExample: ./one-chain $BINARY test-chain-id ./data 26657 26656 6060 9090 \n"
  exit 1
}

BINARY=$1
CHAINID=$2
CHAINDIR=$3
RPCPORT=$4
P2PPORT=$5
PROFPORT=$6
GRPCPORT=$7

if [ -z "$1" ]; then
  display_usage "[BINARY]"
fi

if [ -z "$2" ]; then
  display_usage "[CHAIN_ID]"
fi

if [ -z "$3" ]; then
  display_usage "[CHAIN_DIR]"
fi

if [ -z "$4" ]; then
  display_usage "[RPC_PORT]"
fi

if [ -z "$5" ]; then
  display_usage "[P2P_PORT]"
fi

if [ -z "$6" ]; then
  display_usage "[PROFILING_PORT]"
fi

if [ -z "$7" ]; then
  display_usage "[GRPC_PORT]"
fi

echo "Creating $BINARY instance: home=$CHAINDIR | chain-id=$CHAINID | p2p=:$P2PPORT | rpc=:$RPCPORT | profiling=:$PROFPORT | grpc=:$GRPCPORT"

# Display software version for testers
echo "GAIA VERSION INFO:"
${BINARY} version --long

# Add dir for chain, exit if error
if ! mkdir -p $CHAINDIR/$CHAINID 2>/dev/null; then
    echo "Failed to create chain folder. Aborting..."
    exit 1
fi

# Build genesis file incl account for passed address
coins="100000000000stake,100000000000samoleans"
delegate="100000000000stake"

$BINARY --home $CHAINDIR/$CHAINID --chain-id $CHAINID init $CHAINID &> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID keys add validator --keyring-backend="test" --output json > $CHAINDIR/$CHAINID/validator_seed.json 2> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID keys add user --keyring-backend="test" --output json > $CHAINDIR/$CHAINID/key_seed.json 2> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID genesis add-genesis-account $($BINARY --home $CHAINDIR/$CHAINID keys --keyring-backend="test" show user -a) $coins &> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID genesis add-genesis-account $($BINARY --home $CHAINDIR/$CHAINID keys --keyring-backend="test" show validator -a) $coins  &> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID genesis gentx validator $delegate --keyring-backend="test" --chain-id $CHAINID &> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID genesis collect-gentxs &> /dev/null
sleep 1

# Check platform
platform='unknown'
unamestr=`uname`
if [ "$unamestr" = 'Linux' ]; then
   platform='linux'
fi

# Set proper defaults and change ports (use a different sed for Mac or Linux)
echo "Change settings in config.toml file..."
if [ $platform = 'linux' ]; then
  sed -i 's#"tcp://127.0.0.1:26657"#"tcp://0.0.0.0:'"$RPCPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's#"tcp://0.0.0.0:26656"#"tcp://0.0.0.0:'"$P2PPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's#"localhost:6060"#"localhost:'"$PROFPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/timeout_commit = "5s"/timeout_commit = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/timeout_propose = "3s"/timeout_propose = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/index_all_keys = false/index_all_keys = true/g' $CHAINDIR/$CHAINID/config/config.toml
  # https://github.com/tendermint/tendermint/issues/6217#issuecomment-795589506
  sed -i 's/"time_iota_ms": "1000"/"time_iota_ms": "1"/g' $CHAINDIR/$CHAINID/config/genesis.json
  # sed -i '' 's#index-events = \[\]#index-events = \["message.action","send_packet.packet_src_channel","send_packet.packet_sequence"\]#g' $CHAINDIR/$CHAINID/config/app.toml

  tmp=`mktemp`
  jq '.app_state.gov.params.voting_period = "10s" | .app_state.gov.params.expedited_voting_period = "5s"' $CHAINDIR/$CHAINID/config/genesis.json > $tmp && mv $tmp $CHAINDIR/$CHAINID/config/genesis.json
  sed -i 's/^max_body_bytes = 1000000$/max_body_bytes = 10000000/' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/^max_tx_bytes = 1048576$/max_tx_bytes = 10485760/' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/^rpc-max-body-bytes = 1000000$/rpc-max-body-bytes = 10000000/' $CHAINDIR/$CHAINID/config/app.toml
else
  sed -i '' 's#"tcp://127.0.0.1:26657"#"tcp://0.0.0.0:'"$RPCPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's#"tcp://0.0.0.0:26656"#"tcp://0.0.0.0:'"$P2PPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's#"localhost:6060"#"localhost:'"$PROFPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/timeout_commit = "5s"/timeout_commit = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/timeout_propose = "3s"/timeout_propose = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/index_all_keys = false/index_all_keys = true/g' $CHAINDIR/$CHAINID/config/config.toml
  # https://github.com/tendermint/tendermint/issues/6217#issuecomment-795589506
  sed -i '' 's/"time_iota_ms": "1000"/"time_iota_ms": "1"/g' $CHAINDIR/$CHAINID/config/genesis.json
  # sed -i '' 's#index-events = \[\]#index-events = \["message.action","send_packet.packet_src_channel","send_packet.packet_sequence"\]#g' $CHAINDIR/$CHAINID/config/app.toml

  tmp=`mktemp`
  jq '.app_state.gov.params.voting_period = "10s" | .app_state.gov.params.expedited_voting_period = "5s"' $CHAINDIR/$CHAINID/config/genesis.json > $tmp && mv $tmp $CHAINDIR/$CHAINID/config/genesis.json
  sed -i '' 's/^max_body_bytes = 1000000$/max_body_bytes = 10000000/' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/^max_tx_bytes = 1048576$/max_tx_bytes = 10485760/' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/^rpc-max-body-bytes = 1000000$/rpc-max-body-bytes = 10000000/' $CHAINDIR/$CHAINID/config/app.toml
fi
